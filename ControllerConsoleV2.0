#include <Keypad.h>
#include <SPI.h>
#include <LiquidCrystal_I2C.h>
#include <Wire.h>

                                                  //constants for row and column sizes
const byte ROWS = 4;
const byte COLS = 4;

                                                  //Array to represent keys on keypad
char hexaKeys[ROWS][COLS] = {
  {'1','2','3','A'},
  {'4','5','6','B'},
  {'7','8','9','C'},
  {'*','0','#','D'}
};

byte rowPins[ROWS] = {9, 8, 7, 6};                //connect to the row pinouts of the keypad
byte colPins[COLS] = {5, 4, 3, 2};                //connect to the column pinouts of the keypad


                                                    //create keypad object
Keypad customKeypad = Keypad(makeKeymap(hexaKeys), rowPins, colPins, ROWS, COLS);


                                                    //create LCD object
LiquidCrystal_I2C lcd(0x3F, 20, 2);                 //doubel check address and digits



int azimuth3Digits = 0;
int distanceMeters = 0;

int digitOne = 0;
int digitTwo = 0;
int digitThree = 0;

int iterA = 0;

void setup() {
                                                    //setup lcd
  lcd.backlight();
  lcd.init();

}

void loop() {

                                                    //get key value if pressed
  char customKey = customKeypad.getKey();
   
  if (customKey) {
    lcd.clear();
    lcd.setCursor(0,0);
    lcd.print(customKey);
    
  }

  if ((customKey >= 0) + (customKey <= 9)) {
 
    
    if(iterA > 2) {
      
      iterA = 0;
    }
  
    if(iterA == 0) {
      digitOne = customKey;
      customKey = 'n';
    }
    else if (iterA == 1) {
      digitTwo = customKey;
      customKey = 'n';
    }
    else {
      digitThree = customKey;
      customKey = 'n';

    }
   }
  else if (customKey == 'A') {                                //select A to load azimuth
    azimuth3Digits = ((digitOne * 100) + (digitTwo * 10) +(digitThree));
    customKey = 'n';
    lcd.print("Azimuth_");                                    //display azimuth in degrees. we will use this later
    lcd.print(azimuth3Digits); 
  }    
  else if (customKey == 'B') {                                //select B to load distance
    distanceMeters = ((digitOne * 100) + (digitTwo * 10) +(digitThree));
    customKey = 'n';
    lcd.print("Distance_");                                   //display distance in meters. we will use this later**
    lcd.print(distanceMeters);
  }   

              // 'C' here I will put cartesian X coordinates +-999 meters 

              // 'D' here I will put Z

  
  else if (customKey == '#') {
    iterA = 2;
    digitOne = 0;
    digitTwo = 0;
    digitThree = 0;
    lcd.print("Az 0_Distance_0");                             // display zero values
  }
   else if (customKey == '*') {               // ACTIVATE loaded (A or B)
    lcd.print("EXECUTE");
                                              //insert function to power solenoid array (GO)
    
  }
  iterA++;
  
  
} //end of the loop


// menu driven operation , 4x4 keypad input, 2 x 20 lcd diplay, 
//  objects x (execute(*), clear values(#), ###enter(A) azimuth(degrees), ###enter(B) distance(meters), 
//  ###enter(C) Xcoordinates(meters), ###enter(D) Zcoordinates)
